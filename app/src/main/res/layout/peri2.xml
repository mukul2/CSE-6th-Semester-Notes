<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:card_view="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

   <ScrollView
       android:layout_width="match_parent"
       android:layout_height="wrap_content">


       <LinearLayout
           android:layout_width="match_parent"
           android:orientation="vertical"
           android:layout_height="wrap_content">


           <android.support.v7.widget.CardView
               android:layout_width="match_parent"
               android:layout_height="match_parent"
               android:layout_marginLeft="5dp"
               android:layout_marginRight="5dp"
               android:layout_marginTop="5dp"
               android:paddingBottom="10dp"
               android:paddingTop="10dp"
               card_view:cardCornerRadius="5dp">

           </android.support.v7.widget.CardView>

           <android.support.v7.widget.CardView
               android:layout_width="match_parent"
               android:layout_height="match_parent"
               android:layout_marginLeft="5dp"
               android:layout_marginRight="5dp"
               android:layout_marginTop="5dp"
               android:paddingBottom="10dp"
               android:paddingTop="10dp"
               card_view:cardCornerRadius="5dp">

               <LinearLayout
                   android:layout_width="match_parent"
                   android:layout_height="wrap_content"
                   android:orientation="vertical"
                   android:padding="10dp">


                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="Describe Central processor  highways with figure" />

               </LinearLayout>
           </android.support.v7.widget.CardView>

           <android.support.v7.widget.CardView
               android:layout_width="match_parent"
               android:layout_height="match_parent"
               android:layout_marginLeft="5dp"
               android:layout_marginRight="5dp"
               android:layout_marginTop="5dp"
               android:paddingBottom="10dp"
               android:paddingTop="10dp"
               card_view:cardCornerRadius="5dp">

               <LinearLayout
                   android:layout_width="match_parent"
                   android:layout_height="wrap_content"
                   android:orientation="vertical"
                   android:padding="10dp">

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="Explain asynchronous serial interface with diagram"
                       android:textColor="@color/colorPrimary" />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="Asynchronous Serial Interface, or ASI, is a physical (connector and electrical) definition for serial data over 75-ohm coaxial cable at rates at or less than 270 megabits per second. Electrically, the signal is typically around 1 volt." />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="ASI has one purpose only: the transmission of an MPEG Transport Stream." />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="Asynchronous serial communication is a form of serial communication in which the communicating endpoints' interfaces are not continuously synchronized by a common clock signal. Instead of a common synchronization signal, the data stream contains synchronization information in form of start and stop signals, before and after each unit of transmission, respectively. The start signal prepares the receiver for arrival of data and the stop signal resets its state to enable triggering of a new sequence.

A common kind of start-stop transmission is ASCII over RS-232, for example for use in teletypewriter operation." />

                   <ImageView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:src="@drawable/asi" />
               </LinearLayout>
           </android.support.v7.widget.CardView>

           <android.support.v7.widget.CardView
               android:layout_width="match_parent"
               android:layout_height="match_parent"
               android:layout_marginLeft="5dp"
               android:layout_marginRight="5dp"
               android:layout_marginTop="5dp"
               android:paddingBottom="10dp"
               android:paddingTop="10dp"
               card_view:cardCornerRadius="5dp">

               <LinearLayout
                   android:layout_width="match_parent"
                   android:layout_height="wrap_content"
                   android:orientation="vertical"
                   android:padding="10dp">

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="Explain the BSR mode of 8255 I/O ports"
                       android:textColor="@color/colorPrimary" />


                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="BSR mode-"
                       android:textColor="@color/colorAccent" />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="1. The BSR mode is a port C bit set/reset mode." />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="2. The individual bit of port C can be set or reset by writing control word in the control register." />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="3. The control word format of BSR mode is as shown in the figure below" />

                   <ImageView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:src="@drawable/bsr" />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="1. The pin of port C is selected using bit select bits [b b b] and set or reset is decided by bit S/R Ì…." />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="2. The BSR mode affects only one bit of port C at a time. 6.0The bit set using BSR mode remains set unless and until you change the bit. So to set any bit of port C, bit pattern is loaded in control register." />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="3. If a BSR mode is selected it will not affect I/O mode." />


               </LinearLayout>
           </android.support.v7.widget.CardView>

           <android.support.v7.widget.CardView
               android:layout_width="match_parent"
               android:layout_height="match_parent"
               android:layout_marginLeft="5dp"
               android:layout_marginRight="5dp"
               android:layout_marginTop="5dp"
               android:paddingBottom="10dp"
               android:paddingTop="10dp"
               card_view:cardCornerRadius="5dp">

               <LinearLayout
                   android:layout_width="match_parent"
                   android:layout_height="wrap_content"
                   android:orientation="vertical"
                   android:padding="10dp">

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="I/O modes"
                       android:textColor="@color/colorAccent" />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="There are three I/O modes of operation:" />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="Mode 0- Basic I/O" />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="Mode 1- Strobed I/O" />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="Mode 2- Bi-directional I/O" />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="The I/O modes are programmed using control register." />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="The control word format of I/O modes is as shown in the figure below:" />

                   <ImageView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:src="@drawable/io" />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="Function of each bit is as follows:" />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="1. D7D7 â€“ When the bit D7D7 = 1 then I/O mode is selected, if D7=0D7=0 then BSR mode is selected. The function of bits D0D0 to D6D6 is independent on mode (I/O mode or BSR mode)." />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="2. D6D6 and D5D5 â€“ In I/O mode the bits D6 and D5 specifies the different I/O modes for group A i.e. Mode 0, Mode 1 and Mode 2 for port A and port C upper." />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="3. D4 and D3 â€“ In I/O mode the bits D4D4 and D3D3 selects the port function for group A. If these bits = 1 the respective port specified is used as input port. But if bit = 0, the port is used as output port." />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="4. D2D2  â€“ In I/O mode the bit D2D2 specifies the different I/O modes for group B i.e. Mode 0 and Mode 1 for port B and port C lower." />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="5. D1D1  and D0D0 â€“ In I/O mode the bits D1D1 and D0D0 selects the port function for group B. If these bits = 1 the respective port specified is used as input port. But if bit = 0, the port is used as output port." />

                   <TextView
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       android:text="All the 3 modes i.e. Mode 0, Mode 1 and Mode 2 are only for group A ports, but for group B only 2 modes i.e. Mode 0 and Mode 1 are provided. When 8255 is reset, it will clear control word register contents and all the ports are set to input mode. The ports of 8255 can be programmed for other modes by sending appropriate bit pattern to control register." />


               </LinearLayout>
           </android.support.v7.widget.CardView>
       </LinearLayout>



   </ScrollView>
</RelativeLayout>