<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
 android:layout_width="match_parent"
    android:layout_height="match_parent">

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent">
<LinearLayout
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical">



    <android.support.v7.widget.CardView
        xmlns:card_view="http://schemas.android.com/apk/res-auto"
        xmlns:android="http://schemas.android.com/apk/res/android"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingTop="10dp"
        android:paddingBottom="10dp"
        android:layout_marginTop="5dp"
        android:layout_marginLeft="5dp"
        android:layout_marginRight="5dp"
        card_view:cardCornerRadius="5dp">
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:padding="10dp"
            android:orientation="vertical">


<TextView
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:textSize="25dp"
    android:textColor="@color/colorPrimary"
    android:text="There are some conditions to check whether the system is linear or not."
    />
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"
                android:text="The conditions are âˆ’"/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"
                android:text="The output should be zero for zero input."/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"
                android:text="There should not be any non-linear operator present in the system."/>


        </LinearLayout>
    </android.support.v7.widget.CardView>



    <android.support.v7.widget.CardView
        xmlns:card_view="http://schemas.android.com/apk/res-auto"
        xmlns:android="http://schemas.android.com/apk/res/android"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingTop="10dp"
        android:paddingBottom="10dp"
        android:layout_marginTop="5dp"
        android:layout_marginLeft="5dp"
        android:layout_marginRight="5dp"
        card_view:cardCornerRadius="5dp">
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:padding="10dp"
            android:orientation="vertical">


            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"
                android:textColor="@color/colorPrimary"
                android:text="Examples"/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"
                android:textColor="@color/colorAccent"
                android:text="a) y(t)=x(t)+3"/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"

                android:text="This system is not a linear system because it violates the first condition. If we put input as zero, making x(t) = 0, then the output is not zero."/>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"
                android:textColor="@color/colorAccent"
                android:text="b) y(t)=sintx(t)"/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"

                android:text="In this system, if we give input as zero, the output will become zero. Hence, the first condition is clearly satisfied. Again, there is no non-linear operator that has been applied on x(t). Hence, second condition is also satisfied. Therefore, the system is a linear system."/>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"
                android:textColor="@color/colorAccent"
                android:text="c) y(t)=sin(x(t))"/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"

                android:text="In the above system, first condition is satisfied because if we put x(t) = 0, the output will also be sin(0) = 0. However, the second condition is not satisfied, as there is a non-linear operator which operates x(t). Hence, the system is not linear."/>

        </LinearLayout>
    </android.support.v7.widget.CardView>



    <android.support.v7.widget.CardView
        xmlns:card_view="http://schemas.android.com/apk/res-auto"
        xmlns:android="http://schemas.android.com/apk/res/android"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingTop="10dp"
        android:paddingBottom="10dp"
        android:layout_marginTop="5dp"
        android:layout_marginLeft="5dp"
        android:layout_marginRight="5dp"
        card_view:cardCornerRadius="5dp">
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:padding="10dp"
            android:orientation="vertical">

<TextView
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:textSize="25dp"
    android:textColor="@color/colorPrimary"
    android:text="What is Memory System and Memoryless system?"/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"
                android:textColor="@color/colorAccent"
                android:text="Memory System"
                />
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"
                android:textColor="@color/colorAccent"
                android:text="Memoryless System"
                />
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"

                android:text=" A system is memoryless if the output y[n] at every value of n depends only on the input x[n] at the same value of n"
                />





        </LinearLayout>
    </android.support.v7.widget.CardView>


    <android.support.v7.widget.CardView
        xmlns:card_view="http://schemas.android.com/apk/res-auto"
        xmlns:android="http://schemas.android.com/apk/res/android"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingTop="10dp"
        android:paddingBottom="10dp"
        android:layout_marginTop="5dp"
        android:layout_marginLeft="5dp"
        android:layout_marginRight="5dp"
        card_view:cardCornerRadius="5dp">
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:padding="10dp"
            android:orientation="vertical">

<TextView
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:textSize="25dp"
    android:textColor="@color/colorPrimary"
    android:text="What are the properties of convolution?"/>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"
                android:text="Convolution is a linear operator and, therefore, has a number of important properties including the commutative, associative, and distributive properties. The definitions and interpretations of these properties are summarized below."/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"
                android:textColor="@color/colorAccent"
                android:text="Commutative Property"/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"

                android:text="The commutative property states that the order in which two sequences are convolv~d is not important. Mathematically, the commutative property is "/>

          <TextView
              android:layout_width="match_parent"
              android:layout_height="wrap_content"
              android:textSize="25dp"
              android:text="x(n) * h(n) = h(n) * x(n) "/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"
                android:text="From a systems point of view, this property states that a system with a unit sample response hen) and input x(n) behaves in exactly the same way as a system with unit sample response x(n) and an input hen). This is illustrated in Fig. "/>

            <ImageView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:src="@drawable/c"/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"
                android:textColor="@color/colorAccent"
                android:text="Associative Property"/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"

                android:text="The convolution operator satisfies the associative property, which is "/>
<ImageView
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:src="@drawable/c2"
    />
            <TextView
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:textSize="25dp"
    android:text="From a systems point of view, the associative property states that if two systems with unit sample responses h1(n) and h2(n) are connected in cascade as shown in Fig, an equivalent system is one that has a unit sample response equal to the convolution of hI (n) and h2(n): "/>
           <ImageView
               android:layout_width="match_parent"
               android:layout_height="wrap_content"
               android:src="@drawable/c3"
               />
            <ImageView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:src="@drawable/c4"
                />

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"
                android:textColor="@color/colorAccent"
                android:text="Distributive Property"/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"

                android:text="The distributive property of the convolution operator states that "/>



            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="25dp"

                android:text="x(n) * {hl(n) + h2(n)} = x(n) * hJ(n) + x(n) * h2(n) "/>
<TextView
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:textSize="25dp"
    android:text="From a systems point of view, this property asserts that if two systems with unit sample responses h J (n) and h2(n) are connected in parallel, as illustrated in Fig, an equivalent system is one that has a unit sample response equal to the sum of hJ(n) and h2(n): "/>
<ImageView
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:src="@drawable/c5"/>
            <ImageView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:src="@drawable/c6"/>









            <android.support.v7.widget.CardView
                xmlns:card_view="http://schemas.android.com/apk/res-auto"
                xmlns:android="http://schemas.android.com/apk/res/android"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:paddingTop="10dp"
                android:paddingBottom="10dp"
                android:layout_marginTop="5dp"
                android:layout_marginLeft="5dp"
                android:layout_marginRight="5dp"
                card_view:cardCornerRadius="5dp">
                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:padding="10dp"
                    android:orientation="vertical">


<TextView
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:textSize="25dp"
    android:textColor="@color/colorPrimary"
    android:text="What are the steps involved in calculating convolution sum?"/>


                    <TextView
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:textSize="25dp"
                        android:text="Convolutions may be performed graphically. The steps involved in using the graphical approach are as follows: "/>



                    <TextView
                        android:layout_width="match_parent"
                        android:layout_height="match_parent"
                        android:textSize="25dp"
                        android:text="1. Plot both sequences, x(k) and h(k), as functions of k. "/>
                    <TextView
                        android:layout_width="match_parent"
                        android:layout_height="match_parent"
                        android:textSize="25dp"
                        android:text="2. Choose one of the sequences, say h(k), and time-reverse it to form the sequence h( -k). "/>
                    <TextView
                        android:layout_width="match_parent"
                        android:layout_height="match_parent"
                        android:textSize="25dp"
                        android:text="3. Shift the time-reversed sequence by n. "/>
                    <TextView
                        android:layout_width="match_parent"
                        android:layout_height="match_parent"
                        android:textSize="25dp"
                        android:text="4. Multiply the two sequences x(k) and hen - k) and sum the product for all values of k. The resulting value will be equal to yen). This process is repeated for all possible shifts, n. "/>






                </LinearLayout>
            </android.support.v7.widget.CardView>






















        </LinearLayout>
    </android.support.v7.widget.CardView>









    <android.support.v7.widget.CardView
        xmlns:card_view="http://schemas.android.com/apk/res-auto"
        xmlns:android="http://schemas.android.com/apk/res/android"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingTop="10dp"
        android:paddingBottom="10dp"
        android:layout_marginTop="5dp"
        android:layout_marginLeft="5dp"
        android:layout_marginRight="5dp"
        card_view:cardCornerRadius="5dp">
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:padding="10dp"
            android:orientation="vertical">

<TextView
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:textColor="@color/colorPrimary"
    android:textSize="25dp"
    android:text="Properties of ROC of Z-Transforms"/>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"

                android:textSize="25dp"
                android:text="ROC of z-transform is indicated with circle in z-plane."/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"

                android:textSize="25dp"
                android:text="ROC does not contain any poles."/>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"

                android:textSize="25dp"
                android:text="If x(n) is a finite duration causal sequence or right sided sequence, then the ROC is entire z-plane except at z = 0."/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"

                android:textSize="25dp"
                android:text="If x(n) is a finite duration anti-causal sequence or left sided sequence, then the ROC is entire z-plane except at z = âˆž."/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"

                android:textSize="25dp"
                android:text="If x(n) is a infinite duration causal sequence, ROC is exterior of the circle with radius a. i.e. |z| > a."/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"

                android:text="If x(n) is a infinite duration anti-causal sequence, ROC is interior of the circle with radius a. "/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"

                android:textSize="25dp"
                android:text="If x(n) is a finite duration two sided sequence, then the ROC is entire z-plane except at z = 0 and z = âˆž."/>


        </LinearLayout>
    </android.support.v7.widget.CardView>


    <android.support.v7.widget.CardView
        xmlns:card_view="http://schemas.android.com/apk/res-auto"
        xmlns:android="http://schemas.android.com/apk/res/android"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingTop="10dp"
        android:paddingBottom="10dp"
        android:layout_marginTop="5dp"
        android:layout_marginLeft="5dp"
        android:layout_marginRight="5dp"
        card_view:cardCornerRadius="5dp">
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:padding="10dp"
            android:orientation="vertical">


<TextView
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:textColor="@color/colorPrimary"
    android:textSize="25dp"
    android:text="Properties of Adaptive filter"/>
           <ImageView
               android:layout_width="match_parent"
               android:layout_height="wrap_content"
               android:src="@drawable/adap"
               />

        </LinearLayout>
    </android.support.v7.widget.CardView>








    <android.support.v7.widget.CardView
        xmlns:card_view="http://schemas.android.com/apk/res-auto"
        xmlns:android="http://schemas.android.com/apk/res/android"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingTop="10dp"
        android:paddingBottom="10dp"
        android:layout_marginTop="5dp"
        android:layout_marginLeft="5dp"
        android:layout_marginRight="5dp"
        card_view:cardCornerRadius="5dp">
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:padding="10dp"
            android:orientation="vertical">
<TextView
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:textColor="@color/colorPrimary"
    android:text="Consider the Analog signal "/>
            <ImageView
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:src="@drawable/a1"/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="a) Determine the minimum sampling rate required to avoid aliasing."/>
            <ImageView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:src="@drawable/a2"/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Hence the minimum sampling rate required to avoid aliasing is Fs = 100 Hz."/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="b) Suppose that the signal is sampled at the rate of Fs = 200 Hz, what is the discretetime signal obtained after sampling?"/>

            <ImageView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:src="@drawable/a3"/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="c) Suppose that the signal is sampled at the rate of Fs = 75 Hz, what is the discretetime signal obtained after sampling? "/>

            <ImageView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:src="@drawable/a4"/>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="d) What is the frequency of a sinusoid that yields samples identical to those obtained in part (c)?"/>

<ImageView
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:src="@drawable/a5"/>
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="sampled at Fs = 75 samples per second yields identical samples. Hence F1 = 50 Hz is an alias of F2 = 25 Hz for the sampling rate Fs = 75 Hz."/>


        </LinearLayout>
    </android.support.v7.widget.CardView>














</LinearLayout>


    </ScrollView>
</RelativeLayout>